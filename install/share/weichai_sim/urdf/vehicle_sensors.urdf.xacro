<?xml version="1.0"?>

<robot name="vehicle_sensors" xmlns:xacro="http://www.ros.org/wiki/xacro" >

  <xacro:macro name="front_camera" params="name parent_link x y z roll pitch yaw horizontal_fov image_width image_height" >
    <link name="${name}" >
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <!-- <box size="0.1 0.1 0.1" /> -->
          <mesh filename="package://weichai_sim/meshes/camera.stl" scale="1.0 1.0 1.0"/>
        </geometry> 
        <!-- <material name="grey">
          <color rgba="1 1 1 1" />
        </material> -->
      </visual>
    </link>

    <link name="${name}_optical" />

    <joint name="${name}_optical" type="fixed" >
      <parent link="${name}_optical" />
      <child link="${name}" />
      <origin xyz="-0.2 0 0" rpy="-1.57079632679 0 -1.57079632679" />
    </joint>

    <joint name="${name}_joint" type="fixed" >
      <parent link="${parent_link}" />
      <child link="${name}_optical" />
      <origin xyz="${x} ${y} ${z}" rpy="${roll} ${pitch} ${yaw}" />
    </joint>

    <gazebo reference="${name}_optical" >
      <material>Gazebo/Grey</material>

      <sensor type="camera" name="${name}_camera">
        <update_rate>30.0</update_rate>

        <camera name="cam">
          <horizontal_fov>${horizontal_fov}</horizontal_fov>
          <image>
            <width>${image_width}</width>
            <height>${image_height}</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <!-- Noise is sampled independently per pixel on each frame.
                 That pixel's noise value is added to each of its color
                 channels, which at that point lie in the range [0,1]. -->
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>

        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>${name}</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>${name}</frameName>
          <hackBaseline>0.0</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>
      </sensor>
    </gazebo>
  </xacro:macro>

  <xacro:macro name="side_camera" params="name parent_link x y z roll pitch yaw horizontal_fov image_width image_height" >
    <link name="${name}" >
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <box size="0.1 0.1 0.1" />
        </geometry> 
        <!-- <material name="white">
          <color rgba="1 1 1 1" />
        </material> -->
      </visual>
    </link>

    <link name="${name}_optical" />

    <joint name="${name}_optical" type="fixed" >
      <parent link="${name}_optical" />
      <child link="${name}" />
      <origin xyz="0 0 0" rpy="-1.57079632679 0 -1.57079632679" />
    </joint>

    <joint name="${name}_joint" type="fixed" >
      <parent link="${parent_link}" />
      <child link="${name}_optical" />
      <origin xyz="${x} ${y} ${z}" rpy="${roll} ${pitch} ${yaw}" />
    </joint>

    <gazebo reference="${name}_optical" >
      <material>Gazebo/Grey</material>

      <sensor type="camera" name="${name}_camera">
        <update_rate>30.0</update_rate>

        <camera name="cam">
          <horizontal_fov>${horizontal_fov}</horizontal_fov>
          <image>
            <width>${image_width}</width>
            <height>${image_height}</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <!-- Noise is sampled independently per pixel on each frame.
                 That pixel's noise value is added to each of its color
                 channels, which at that point lie in the range [0,1]. -->
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>

        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>${name}</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>${name}</frameName>
          <hackBaseline>0.0</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>
      </sensor>
    </gazebo>
  </xacro:macro>

   <xacro:macro name="fisheye_camera" params="name parent_link x y z roll pitch yaw horizontal_fov image_width image_height" >
    <link name="${name}" >
      <!-- <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <box size="0.1 0.1 0.1" />
        </geometry> 
      </visual> -->
    </link>

    <link name="${name}_optical" />

    <joint name="${name}_optical" type="fixed" >
      <parent link="${name}_optical" />
      <child link="${name}" />
      <origin xyz="0 0 0" rpy="-1.57079632679 0 -1.57079632679" />
    </joint>

    <joint name="${name}_joint" type="fixed" >
      <parent link="${parent_link}" />
      <child link="${name}_optical" />
      <origin xyz="${x} ${y} ${z}" rpy="${roll} ${pitch} ${yaw}" />
    </joint>

    <gazebo reference="${name}_optical" >
      <material>Gazebo/Grey</material>

      <sensor type="wideanglecamera" name="${name}_camera">
        <update_rate>30.0</update_rate>
        <always_on>1</always_on>
        <camera>
          
          <horizontal_fov>${horizontal_fov}</horizontal_fov>
          <image>
            <width>${image_width}</width>
            <height>${image_height}</height>
            <!-- <format>R8G8B8</format> -->
          </image>
          <clip>
            <near>0.1</near>
            <far>100</far>
          </clip>
          <lens>
            <!-- type element is mandatory -->
            <type>custom</type>
            <!-- manually defined mapping function r = c1*f*fun(theta/c2 + c3) -->
            <!-- More information here: https://en.wikipedia.org/wiki/Fisheye_lens#Mapping_function -->
            <custom_function>
              <c1>1.05</c1>
              <!-- linear scaling -->
              <c2>4</c2>
              <!-- angle scaling -->
              <f>1.0</f>
              <!-- one more scaling parameter -->
              <fun>tan</fun>
              <!-- one of sin,tan,id -->
            </custom_function>
            <!-- if it is set to `true` your horizontal FOV will ramain as defined -->
            <!-- othervise it depends on lens type and custom function, if there is one -->
            <scale_to_hfov>true</scale_to_hfov>
            <!-- clip everything that is outside of this angle -->
            <cutoff_angle>3.1415</cutoff_angle>
            <!-- resolution of the cubemap texture, the highter it is - the sharper is your image -->
            <env_texture_size>512</env_texture_size>
          </lens>
        </camera>

        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
          <!-- <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate> -->
          <cameraName>${name}</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>${name}</frameName>
          <!-- <hackBaseline>0.0</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2> -->
          <hackBaseline>0.07</hackBaseline>
        </plugin>
      </sensor>
    </gazebo>
  </xacro:macro>

  <xacro:macro name="vehicle_gps" params="name parent_link x y z rate ref_lat ref_lon" >
    <link name="${name}" >
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <box size="0.147 0.125 0.055" /><!--PwrPak7 gps-->
        </geometry>
        <material name="white" >
          <color rgba="1 1 1 1" />
        </material>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <box size="0.147 0.125 0.055" />
        </geometry>
      </collision>
      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="1.0"/>
        <inertia ixx="0.037227" ixy="0" ixz="0" iyy="0.037227" iyz="0" izz="0.063878"/>
      </inertial>
    </link>
    <joint name="${name}" type="fixed" >
      <origin xyz="${x} ${y} ${z}" rpy="0 0 0" />
      <parent link="${parent_link}" />
      <child link="${name}" />
    </joint>
    <gazebo>
      <plugin name="gps_plugin" filename="libhector_gazebo_ros_gps.so" >
        <bodyName>${name}</bodyName>
        <frameId>${name}</frameId>
        <update_rate>${rate}</update_rate>
        <topicName>/${name}/gps/fix</topicName>
        <velocityTopicName>/${name}/gps/fix_velocity</velocityTopicName>
        <referenceLatitude>${ref_lat}</referenceLatitude>
        <referenceLongitude>${ref_lon}</referenceLongitude>
        <referenceHeading>90</referenceHeading>
        <referenceAltitude>10</referenceAltitude>
        <offset>${x} ${y} ${z}</offset>
        <drift>0.001 0.001 0.001</drift>
        <gaussianNoise>0.05 0.05 0.05</gaussianNoise>
        <velocityDrift>0.001 0.001 0.001</velocityDrift>
        <velocityGaussianNoise>0.5 0.5 0.5</velocityGaussianNoise>
      </plugin>
    </gazebo>
  </xacro:macro>

  <xacro:macro name="mmw_radar" params="name parent_link x y z roll pitch yaw" >
    <link name="${name}" >
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <mesh filename="package://weichai_sim/meshes/mmw.dae" scale="1.0 1.0 1.0"/>
        </geometry>
        <material name="black">
          <color rgba="0 0 0 1.0"/>
        </material>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <box size="0.1 0.03 0.06" />
        </geometry>
      </collision>
      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="1.0"/>
        <inertia ixx="0.037227" ixy="0" ixz="0" iyy="0.037227" iyz="0" izz="0.063878"/>
      </inertial>
    </link>
    <joint name="${name}" type="fixed" >
      <origin xyz="${x} ${y} ${z}" rpy="${roll} ${pitch} ${yaw}" />
      <parent link="${parent_link}" />
      <child link="${name}" />
    </joint>
    <gazebo reference="${name}">
        <material>Gazebo/Black</material>
    </gazebo>
  </xacro:macro>

  <xacro:macro name="ibeo_lidar" params="name parent_link x y z roll pitch yaw" >
    <link name="${name}" >
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <mesh filename="package://weichai_sim/meshes/ibeo.dae" scale="1.0 1.0 1.0"/>
        </geometry>
        <material name="black"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <box size="0.1 0.03 0.06" />
        </geometry>
      </collision>
      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="1.0"/>
        <inertia ixx="0.037227" ixy="0" ixz="0" iyy="0.037227" iyz="0" izz="0.063878"/>
      </inertial>
    </link>
    <joint name="${name}" type="fixed" >
      <origin xyz="${x} ${y} ${z}" rpy="${roll} ${pitch} ${yaw}" />
      <parent link="${parent_link}" />
      <child link="${name}" />
    </joint>
    <gazebo reference="${name}">
        <material>Gazebo/Black</material>
    </gazebo>
  </xacro:macro>

  <xacro:macro name="gps_antenna" params="name parent_link x y z" >
    <link name="${name}" >
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <mesh filename="package://weichai_sim/meshes/gps_antenna.dae" scale="1.0 1.0 1.0"/>
        </geometry>
        <material name="grey"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <box size="0.1 0.1 0.1" />
        </geometry>
      </collision>
      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="1.0"/>
        <inertia ixx="0.037227" ixy="0" ixz="0" iyy="0.037227" iyz="0" izz="0.063878"/>
      </inertial>
    </link>
    <joint name="${name}" type="fixed" >
      <origin xyz="${x} ${y} ${z}" rpy="0 0 0" />
      <parent link="${parent_link}" />
      <child link="${name}" />
    </joint>
    <gazebo reference="${name}">
        <material>Gazebo/Grey</material>
    </gazebo>
  </xacro:macro>
  
  <xacro:macro name="vehicle_imu" params="name parent_link x y z" >
  <joint name="imu_joint" type="fixed">
    <origin xyz="${x} ${y} ${z}" rpy="0 0 0"/>
    <axis xyz="0 0 1"/>
    <parent link="${parent_link}"/>
    <child link="imu_link"/>
  </joint>

    <link name="imu_link">
      <inertial>
        <mass value="1e-5" />
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
      </inertial>
       <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <box size="0.042 0.057 0.0236" /><!--Xsens size-->
        </geometry>
        <material name="orange">
          <color rgba="${255/255} ${108/255} ${10/255} 1.0"/>
        </material>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <box size="0.042 0.057 0.0236" /><!--Xsens size-->
        </geometry>
      </collision>
    </link>
    <gazebo reference="imu_link">
        <material>Gazebo/Orange</material>
    </gazebo>
    <gazebo>
        <plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
          <alwaysOn>true</alwaysOn>
          <bodyName>imu_link</bodyName>
          <frameId>${name}</frameId>
          <topicName>imu</topicName>
          <serviceName>imu_service</serviceName>
          <gaussianNoise>0.0</gaussianNoise>
          <updateRate>30.0</updateRate>
        </plugin>
    </gazebo>
 </xacro:macro>

<xacro:macro name="vehicle_lidar" params="name parent_link x y z lines" >
  <joint name="laser_joint" type="fixed">
    <origin xyz="${x} ${y} ${z}" rpy="0 0 0"/>
    <axis xyz="0 0 1"/>
    <parent link="${parent_link}"/>
    <child link="laser_link"/>
  </joint>
  <link name="laser_link">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
      <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>
    <visual>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <geometry>
    <box size="0.1 0.1 0.1"/>
    </geometry>
    </visual>
    <inertial>
    <mass value="1e-5"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
  </link>
  <gazebo reference="laser_link">
    <sensor name="laser_sensor" type="ray">
      <ray>
      <scan>
        <horizontal>
          <samples>512</samples>
          <resolution>1</resolution>
          <min_angle>-3.14</min_angle>
          <max_angle>3.14</max_angle>
        </horizontal>
        <vertical>
          <samples>${lines}</samples>
          <min_angle>-0.1</min_angle>
          <max_angle>-0.35</max_angle>
        </vertical>
        </scan>
        <range>
          <min>0.2</min>
          <max>30</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin name="sick_lms291_controller" filename="libgazebo_ros_block_laser.so">
        <topicName>laser/scan</topicName>
        <frameName>laser_link</frameName>
      </plugin>
      <always_on>1</always_on>
      <update_rate>30</update_rate>
      <visualize>0</visualize>
    </sensor>
  </gazebo>
 </xacro:macro>
  
 <xacro:macro name="stereo_camera" params="name parent_link x y z" >
  <joint name="stereo_camera_joint" type="fixed">
    <origin xyz="${x} ${y} ${z}" rpy="0 0 0"/>
      <axis xyz="0 0 1"/>
      <parent link="${parent_link}"/>
      <child link="stereo_camera_link"/>
    </joint>
    
    
    <link name="stereo_camera_link">
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
         <box size="${camera_box} ${camera_box} ${camera_box}"/>
        </geometry>
      </collision>
    
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
        <box size="${camera_box} ${camera_box} ${camera_box}"/>
        </geometry>
      </visual>
    
        <inertial>
          <mass value="1e-5" />
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
        </inertial>
    </link>
    
      <gazebo reference="stereo_camera_link">
        <sensor type="multicamera" name="stereo_camera">
          <update_rate>30.0</update_rate>
          <camera name="left">
            <horizontal_fov>1.3962634</horizontal_fov>
            <image>
              <width>800</width>
              <height>800</height>
              <format>R8G8B8</format>
            </image>
            <clip>
              <near>0.02</near>
              <far>300</far>
            </clip>
            <noise>
              <type>gaussian</type>
              <mean>0.0</mean>
              <stddev>0.007</stddev>
            </noise>
          </camera>
          <camera name="right">
            <pose>0 0 0.5 0 0 0</pose>
            <horizontal_fov>1.3962634</horizontal_fov>
            <image>
              <width>800</width>
              <height>800</height>
              <format>R8G8B8</format>
            </image>
            <clip>
              <near>0.02</near>
              <far>300</far>
            </clip>
            <noise>
              <type>gaussian</type>
              <mean>0.0</mean>
              <stddev>0.007</stddev>
            </noise>
          </camera>
          <plugin name="stereo_camera_controller" filename="libgazebo_ros_multicamera.so">
            <alwaysOn>true</alwaysOn>
            <updateRate>0.0</updateRate>
            <cameraName>multisense_sl/stereo_camera</cameraName>
            <imageTopicName>image_raw</imageTopicName>
            <cameraInfoTopicName>camera_info</cameraInfoTopicName>
            <frameName>stereo_camera_link</frameName>
            <hackBaseline>0.07</hackBaseline>
            <distortionK1>0.0</distortionK1>
            <distortionK2>0.0</distortionK2>
            <distortionK3>0.0</distortionK3>
            <distortionT1>0.0</distortionT1>
            <distortionT2>0.0</distortionT2>
          </plugin>
        </sensor>
      </gazebo>
 </xacro:macro>
  
</robot>
